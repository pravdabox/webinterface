// Generated by CoffeeScript 1.12.3
(function() {
  var P,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  P = window.P || {};

  P.ws_endpoint = 'ws://192.168.42.1/ws-bin';

  P.dns = function() {
    var c, maxlen, ws;
    ws = new WebSocket(P.ws_endpoint + '/dns');
    maxlen = 10;
    c = 0;
    return ws.onmessage = function(event) {
      $('<div class="l l-' + c + '">' + event.data + '</div>').appendTo('.filter-dns');
      if ($('.filter-dns .l').length > maxlen) {
        $('.filter-dns .l-' + (c - maxlen)).remove();
      }
      return c++;
    };
  };

  P.connections = function() {
    var ws;
    ws = new WebSocket(P.ws_endpoint + '/connections');
    return ws.onmessage = function(event) {
      var c, connection, i, len, ref, results;
      P.connections_add(event.data);
      $('.filter-connections').html('');
      c = 0;
      ref = P.connections_bin;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        connection = ref[i];
        $('<div class="l l-' + c + '">' + connection + '</div>').appendTo('.filter-connections');
        results.push(c++);
      }
      return results;
    };
  };

  P.connections_bin = [];

  P.connections_add = function(connection) {
    if (indexOf.call(P.connections_bin, connection) < 0) {
      P.connections_bin.push(connection);
    }
    if (P.connections_bin.length > 10) {
      return P.connections_bin.shift();
    }
  };

  P.http = function() {
    var c, maxlen, ws;
    ws = new WebSocket(P.ws_endpoint + '/http');
    maxlen = 10;
    c = 0;
    return ws.onmessage = function(event) {
      $('<div class="l l-' + c + '">' + event.data + '</div>').appendTo('.filter-http');
      if ($('.filter-http .l').length > maxlen) {
        $('.filter-http .l-' + (c - maxlen)).remove();
      }
      return c++;
    };
  };

  P.cookies = function() {
    var c, maxlen, ws;
    ws = new WebSocket(P.ws_endpoint + '/cookies');
    maxlen = 10;
    c = 0;
    return ws.onmessage = function(event) {
      $('<div class="l l-' + c + '">' + event.data + '</div>').appendTo('.filter-cookies');
      if ($('.filter-cookies .l').length > maxlen) {
        $('.filter-cookies .l-' + (c - maxlen)).remove();
      }
      return c++;
    };
  };

  P.images = function() {
    var c, maxlen, ws;
    ws = new WebSocket(P.ws_endpoint + '/images');
    maxlen = 30;
    c = 0;
    return ws.onmessage = function(event) {
      $('<a href="/image/' + event.data + '" target="_blank"><img class="i i-' + c + '" src="/image/' + event.data + '"></a>').prependTo('.filter-images');
      if ($('.filter-images .i').length > maxlen) {
        $('.filter-images .i-' + (c - maxlen)).remove();
      }
      return c++;
    };
  };

  $(function() {
    P.dns();
    P.connections();
    P.http();
    P.cookies();
    return P.images();
  });

}).call(this);
